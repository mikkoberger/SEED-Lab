#include <Encoder.h>
// Defining naming convention between Pins
int voltagePin = 9;
int Voltage = 50;
int enablePin = 4;
int Direction = 7;
Encoder encoder(3, 6); // Creating an object from the encoder class with pin 3 as the interrupt

void setup() {
  Serial.begin(9600); // Baud rate
  Serial.println("Time:    Voltage:  Velocity:   "); // Print Time elapsed, Voltage and Velocity of wheel
  // Create pin outputs and initialize motor 
  pinMode(enablePin, OUTPUT);
  digitalWrite(enablePin, HIGH);
  pinMode(voltagePin, OUTPUT);
  pinMode(Direction, OUTPUT);
  digitalWrite(Direction, LOW);
  
}

int motorStepResponse(int x) {
  // Define variable for Motor Step Response 
  long lowerTime = 1000;
  long upperTime = 2000;
  long oldLocation;
  long newLocation;
  
  // Sample every 1/20 of a second, create 50 ms Delay and 
  double sampleRate = 0.05;
  double Delay = sampleRate*1000;
  double angularVelocity;

  // Store elapsed time in a variable and convert to pwm
  double currentTime = millis();
  double actualVoltage = (255 / 7.5)* x;
  
  // Get values for 1 second only between 1 second and 2 seconds
  if (millis() >= lowerTime && millis() <= upperTime){
    analogWrite(voltagePin, x);
    
    // Get old location and new location
    oldLocation = encoder.read();
    delay(Delay);
    newLocation = encoder.read();
    
    // Calculate change in angular position and calculate angular velocity 
    double deltaPosition = (newLocation - oldLocation)*(6.2832/3200);
    angularVelocity = (deltaPosition) / (sampleRate); 
    
    // Print updated values to serial terminal
    Serial.print(currentTime);
    Serial.print("    ");
    Serial.print(actualVoltage);
    Serial.print("    ");
    Serial.print(angularVelocity);
    Serial.print("\n");
  }
  // Turn off motor
  if (millis() > upperTime){
    digitalWrite(enablePin, LOW);
  }
}

void loop(){
  motorStepResponse(Voltage);
}
